cat("\nSince the default is varimax, we can see here that the students have been ")
print(r.fa.2varimax$loadings, cut = 0.5)
r.fa.2varimax =  factanal(covmat = r, factors = 2)
cat("\nSince the default is varimax, we can see here that the students have been ")
print(r.fa.2varimax$loadings, cut = 0.5)
r.fa.2varimax =  factanal(covmat = r, factors = 2)
cat("\nSince the default is varimax, we can see here that the scores have been seperated by correlation into the Quantitative and Qualitative courses. With the Mathematical courses having the largests loadings in Factor 1 and the Language and History courses having the largest loadings in Factor 2\n\n")
print(r.fa.2varimax$loadings, cut = 0.5)
r.fa.2varimax =  factanal(covmat = r, factors = 2)
cat("\nSince the default is varimax, we can see here that the scores have been seperated by correlation into the Quantitative and Qualitative courses. With the Mathematical courses having the largests loadings in Factor 1 and the Language and History courses having the largest loadings in Factor 2\n
We also have to note that the variance that they explain are less than 50%\n")
print(r.fa.2varimax$loadings, cut = 0.5)
r.fa.2varimax =  factanal(covmat = r, factors = 2)
cat("\nSince the default is varimax, we can see here that the scores have been seperated by correlation into the Quantitative and Qualitative courses. With the Mathematical courses having the largests loadings in Factor 1 and the Language and History courses having the largest loadings in Factor 2
We also have to note that the variance that they explain are less than 50%\n")
print(r.fa.2varimax$loadings, cut = 0.5)
r.fa.3varimax =  factanal(covmat = r, factors = 3)
print(r.fa.3varimax$loadings, cut = 0.5)
r.fa.3varimax =  factanal(covmat = r, factors = 3)
print(r.fa.3varimax$loadings, cut = 0.4)
r.fa.3varimax =  factanal(covmat = r, factors = 3)
print(r.fa.3varimax$loadings, cut = 0.3)
r.fa.3varimax =  factanal(covmat = r, factors = 3)
print(r.fa.3varimax$loadings, cut = 0.2)
r.fa.3varimax =  factanal(covmat = r, factors = 3)
print(r.fa.3varimax$loadings, cut = 0.3)
r.fa.3varimax =  factanal(covmat = r, factors = 3)
cat("Using 3 factors, we still see similar loadings to what we have above, albeit, the weights o the Factors have changed. With French having the most notice")
print(r.fa.3varimax$loadings, cut = 0.5)
r.fa.3varimax =  factanal(covmat = r, factors = 3)
cat("Using 3 factors, we still see similar loadings to what we have above, albeit, the weights o the Factors have changed. For example, French now has 0.706 in Factor 2. The naming will not change ")
print(r.fa.3varimax$loadings, cut = 0.3)
cat("Using 3 factors, we still see similar loadings to what we have above, albeit, the weights o the Factors have changed. For example, French now has 0.706 in Factor 2. The naming will not change
")
r.fa.3varimax =  factanal(covmat = r, factors = 3)
cat("Using 3 factors, we still see similar loadings to what we have above, albeit, the weights o the Factors have changed. For example, French now has 0.706 in Factor 2. The naming will not change
")
print(r.fa.3varimax$loadings, cut = 0.5)
r.fa.2NR =  factanal(covmat = r, factors = 2, rotation="none")
r.fa.2NR
?factanal
r.fa.2NR =  factanal(covmat = r, factors = 2, rotation="none")
r.fa.2NR
print(r.fa.2NR$loadings, cut = 0.5)
print(r.fa.2NR$loadings, cut = 0.4)
print(r.fa.2NR$loadings, cut = 0.3)
print(r.fa.2NR$loadings, cut = 0.5)
genes <- read.csv("https://raw.githubusercontent.com/EricBrownTTU/ISQS6350/main/geneexpression.csv",
header = FALSE)
```
genes <- read.csv("https://raw.githubusercontent.com/EricBrownTTU/ISQS6350/main/geneexpression.csv",
header = FALSE)
genes.dist = dist(genes)
genes.hc = hclust(genes.dist, "average")
# genes.chc = hclust(genes.c_dist, "single")
genes
genes.dist
genes <- read.csv("https://raw.githubusercontent.com/EricBrownTTU/ISQS6350/main/geneexpression.csv",
header = FALSE)
genes.dist = dist(genes)
genes.dist
genes <- read.csv("https://raw.githubusercontent.com/EricBrownTTU/ISQS6350/main/geneexpression.csv",
header = FALSE)
genes.dist = dist(genes)
genes.hc
genes
cor(genes)
cor(genes) - 1
genes.cor_dist = cor(genes) - 1
plot(genes.cor_hc, main="Average HC with Cor Distance")
genes.cor_hc = hclust(genes.cor_dist, "average")
genes.cor_hc = hclust(genes.cor_dist, "average")
genes.cor_hc = hclust(genes.dist, "average")
plot(genes.cor_hc, main="Average HC with Cor Distance")
genes.cor_hc = hclust(genes.cor_dist, "average")
genes <- read.csv("https://raw.githubusercontent.com/EricBrownTTU/ISQS6350/main/geneexpression.csv",
header = FALSE)
genes.dist = dist(genes)
genes.cor_dist = abs(cor(genes)) - 1
genes.cor_hc = hclust(genes.cor_dist, "average")
genes = na.omit(genes)
genes.dist = dist(genes)
genes.cor_dist = cor(genes) - 1
genes.cor_hc = hclust(genes.cor_dist, "average")
dist(genes)
genes.dist
genes.dist = dist(head(genes))
genes.dist
genes.dist = dist(head(genes, 100))
genes.dist
head(genes, 100)
genes.dist = dist(head(genes, 100))
genes.dist
head(genes, 100)
genes.dist = dist(head(genes, 1000))
genes.dist
genes.dist = dist(genes)
genes.cor_dist = cor(genes) - 1
genes.cor_dist = as.dist(cor(genes) - 1)
genes.cor_dist
cor(genes)
genes <- read.csv("https://raw.githubusercontent.com/EricBrownTTU/ISQS6350/main/geneexpression.csv",
header = FALSE)
genes = na.omit(genes)
genes.dist = dist(genes)
genes.cor_dist = as.dist(cor(genes) - 1)
genes <- read.csv("https://raw.githubusercontent.com/EricBrownTTU/ISQS6350/main/geneexpression.csv",
header = FALSE)
genes = na.omit(genes)
genes.dist = dist(genes)
genes.cor_dist = as.dist(cor(genes) - 1)
genes.cor_dist
genes.dist
genes.cor_dist = as.dist(cor(genes) - 1)
genes.cor_hc = hclust(genes.cor_dist, "average")
plot(genes.cor_hc, main="Average HC with Cor Distance")
cor(genes)
genes.cor_dist = as.dist(T(cor(genes)) - 1)
genes.cor_dist = as.dist(cor(T(genes)) - 1)
genes.cor_dist = as.dist(cor(t(genes)) - 1)
genes.cor_dist
genes.cor_dist = cor(t(genes)) - 1
genes.cor_hc = hclust(genes.cor_dist, "average")
genes.cor_dist = as.dist(cor(t(genes)) - 1)
genes.cor_hc = hclust(genes.cor_dist, "average")
plot(genes.cor_hc, main="Average HC with Cor Distance")
genes.cor_hc = hclust(genes.dist, "average")
plot(genes.cor_hc, main="Average HC with Distance")
plot(genes.cor_hc, main="Average HC with Cor Distance")
genes.cor_hc = hclust(genes.cor_dist, "average")
plot(genes.cor_hc, main="Average HC with Cor Distance")
?hclust
genes.hc = hclust(covmat=genes.dist, "average")
genes.cor_hc = ?hclust(genes.cor_dist, "average")
plot(genes.cor_hc, main="Average HC with Cor Distance")
genes.cor_hc = hclust(genes.cor_dist, "average")
genes.cor_hc = hclust(genes.cor_dist, "average")
plot(genes.cor_hc, main="Average HC with Cor Distance")
genes.hc = hclust(genes.dist, "average")
plot(genes.hc, main="Average HC with Distance")
genes.hc = hclust(genes.dist, "complete")
plot(genes.hc, main="Average HC with Distance")
genes.hc = hclust(genes.dist, "complete")
plot(genes.hc, main="Average HC with Distance")
genes.hc = hclust(genes.dist, "single")
plot(genes.hc, main="Single HC with Distance")
genes.hc = hclust(genes.dist, "complete")
plot(genes.hc, main="Complete HC with Distance")
genes <- read.csv("https://raw.githubusercontent.com/EricBrownTTU/ISQS6350/main/geneexpression.csv",
header = FALSE)
genes.dist = dist(genes)
genes.cor_dist = as.dist(cor(genes) - 1)
genes.cor_hc = hclust(genes.cor_dist, "average")
plot(genes.cor_hc, main="Average HC with Cor Distance")
genes.hc = hclust(genes.dist, "average")
plot(genes.hc, main="Average HC with Distance")
genes
protein <- read.csv("https://raw.githubusercontent.com/EricBrownTTU/ISQS6350/main/protein.csv")
protein.scale = scale(protein[,-1])
protein.scale
na.omit(protein.scale)
protein <- read.csv("https://raw.githubusercontent.com/EricBrownTTU/ISQS6350/main/protein.csv")
protein.scale = scale(protein[,-1])
na.omit(protein.scale)
protein.k_means =
protein.k_means = kmeans(protein.scale)
protein.k_means = kmeans(protein)
protein.k_means = kmeans(protein)
protein.k_means = kmeans(protein.scale, 3, nstart=10)
plot.wgss(protein)
plot.wgss(protein, 20)
protein.k_means = kmeans(protein.scale, 2)
protein.k_means
protein <- read.csv("https://raw.githubusercontent.com/EricBrownTTU/ISQS6350/main/protein.csv")
protein.scale = scale(protein[,-1])
plot
protein.k_means = kmeans(protein.scale, 2)
knitr::opts_chunk$set(echo = TRUE)
library(cluster)
library(glue)
library(mclust)
library(arules)
plot.wgss <- function(mydata, maxc){
wss <- numeric(maxc)
for (i in 1:maxc){
wss[i] <- kmeans(mydata, iter.max = 100,
centers = i, nstart = 10)$tot.withinss
}
plot(1:maxc, wss, type = "b",
xlab = "Number of Clusters",
ylab = "Within Groups Sum of Squares",
main = "Scree Plot")
}
options("scipen"=10, "digits"=2)
r <- matrix(c(1.00,0.44,0.41,0.29,0.33,0.25,
0.44,1.00,0.35,0.35,0.32,0.33,
0.41,0.35,1.00,0.16,0.19,0.18,
0.29,0.35,0.16,1.00,0.59,0.47,
0.33,0.32,0.19,0.59,1.00,0.46,
0.25,0.33,0.18,0.47,0.46,1.00), nrow = 6, byrow = TRUE)
rownames(r) = colnames(r) = c("French", "English", "History", "Arithmetic", "Algebra", "Geometry")
genes.hc = hclust(genes.dist, "average")
plot(genes.hc, main="Average HC with Distance")
genes <- read.csv("https://raw.githubusercontent.com/EricBrownTTU/ISQS6350/main/geneexpression.csv",
header = FALSE)
genes.dist = dist(cor(genes))
genes.hc = hclust(genes.dist, "average")
plot(genes.hc, main="Average HC with Distance")
knitr::opts_chunk$set(echo = TRUE)
# install.packages('comprehenr')
# install.packages('dplyr')
library(comprehenr)
library(KernSmooth)
library(ellipse)
library(MVA)
library(CCA)
library(dplyr)
# comment
plot.wgss <- function(mydata, maxc) {
wss <- numeric(maxc)
for (i in 1:maxc) {
wss[i] <- kmeans(mydata,iter.max = 100, centers = i, nstart = 10)$tot.withinss
}
plot(1:maxc, wss,
type = "b",
xlab = "Number of Clusters",
ylab = "Within Groups Sum of Squares",
main = "Scree Plot"
)
}
full_df = read.csv(
'https://raw.githubusercontent.com/iniadewumi/MVA-Dataset-Exploration/master/MVA/datasets/leaf/leaf.csv'
)
k = c(
"1" = "Quercus suber",
"2" = "Salix atrocinerea",
"3" = "Populus nigra",
"4" = "Alnus sp",
"5" = "Quercus robur",
"6" = "Crataegus monogyna",
"7" = "Ilex aquifolium",
"8" = "Nerium oleander",
"9" = "Betula pubescens",
"10" = "Tilia tomentosa",
"11" = "Acer palmaturu",
"12" = "Celtis sp",
"13" = "Corylus avellana",
"14" = "Castanea sativa",
"15" = "Populus alba",
"16" = "Acer negundo",
"17" = "Taxus bacatta",
"18" = "Papaver sp",
"19" = "Polypodium vulgare",
"20" = "Pinus sp",
"21" = "Fraxinus sp",
"22" = "Primula vulgaris",
"23" = "Erodium sp",
"24" = "Bougainvillea sp",
"25" = "Arisarum vulgare",
"26" = "Euonymus japonicus",
"27" = "Ilex perado ssp azorica",
"28" = "Magnolia soulangeana",
"29" = "Buxus sempervirens",
"30" = "Urtica dioica",
"31" = "Podocarpus sp",
"32" = "Acca sellowiana",
"33" = "Hydrangea sp",
"34" = "Pseudosasa japonica",
"35" = "Magnolia grandiflora",
"36" = "Geranium sp",
"37" = "Aesculus californica",
"38" = "Chelidonium majus",
"39" = "Schinus terebinthifolius",
"40" = "Fragaria vesca"
)
cols = c(
'Class',
'Specimen_Number',
'Eccentricity',
'Aspect_Ratio',
'Elongation',
'Solidity',
'Stochastic_Convexity',
'Isoperimetric_Factor',
'Maximal_Indentation_Depth',
'Lobedness',
'Average_Intensity',
'Average_Contrast',
'Smoothness',
'Third_Moment',
'Uniformity',
'Entropy'
)
colnames(full_df) = cols
for (i in 1:nrow(full_df)) {
name = as.character(k[full_df[i, "Class"]])
full_df[i, "Sci_Name"] = name
}
outliers <- function(x) {
Q1 <- quantile(x, probs = .10)
Q3 <- quantile(x, probs = .90)
iqr = Q3 - Q1
upper_limit = Q3 + (iqr * 1.5)
lower_limit = Q1 - (iqr * 1.5)
if (upper_limit == lower_limit) {
FALSE
}
x > upper_limit | x < lower_limit
}
remove_outliers <- function(df, cols = names(df)) {
for (col in cols) {
df <- df[!outliers(df[[col]]), ]
}
df
}
test = full_df %>% group_split(Sci_Name)
new_df = df <- data.frame()
for (i in 1:length(test)) {
df = as.data.frame(test[[i]])[-c(1, 2, 17)]
out_df = remove_outliers(df, as.vector(colnames(df)))
new_df = rbind(new_df, out_df)
}
c = 0
for (i in 1:length(test)) {
df = as.data.frame(test[[i]])
# cat("\n", df$Class[1], "\n")
df = df[-c(1, 2, 17)]
for (name in colnames(df)) {
col = df[, name]
m = mean(col)
sdv = sd(col)
for (val in col) {
if ((val > m + sdv * 3) || (val < m - sdv * 3)) {
# cat("\n", name, ":", val, "[", m, sdv * 3, "]")
# cat("\n", val - m + sdv * 3, "\n\n")
c = c + 1
}
}
}
}
# agg_df = aggregate(full_df, list(full_df$Class), mean)
#
# rownames(agg_df) = agg_df$Sci_Name
#
# agg_df = agg_df[-c(1,2,3,18) ]
leaf_df = full_df[-c(156),]
num_leaf_df = leaf_df[, -c(1,2,17)]
num_leaf_df.shape_feat = num_leaf_df[c(1:7)]
num_leaf_df.text_feat[c(8:14)] = num_leaf_df[c(8:14)]
num_leaf_df.text_feat] = num_leaf_df[c(8:14)]
num_leaf_df.text_feat = num_leaf_df[c(8:14)]
agg = aggregate(leaf_df, list(leaf_df$Class), mean)
num_agg = agg[, -c(1,2, 3,18)]
agg.shape_feat = num_agg[c(1:7)]
agg.text_feat = num_agg[c(8:14)]
# agg_df = aggregate(full_df, list(full_df$Class), mean)
#
# rownames(agg_df) = agg_df$Sci_Name
#
# agg_df = agg_df[-c(1,2,3,18) ]
leaf_df = full_df[-c(156),]
num_leaf_df = leaf_df[, -c(1,2,17)]
num_leaf_df.shape_feat = num_leaf_df[c(1:7)]
num_leaf_df.text_feat = num_leaf_df[c(8:14)]
agg = aggregate(leaf_df, list(leaf_df$Class), mean)
num_agg = agg[, -c(1,2, 3,18)]
agg.shape_feat = num_agg[c(1:7)]
agg.text_feat = num_agg[c(8:14)]
num_agg
agg
agg.shape_feat = num_agg[c(1:7)]
agg.text_feat = num_agg[c(8:14)]
num_leaf_df.cov = cov(num_leaf_df)
num_leaf_df.cor = cor(num_leaf_df)
num_leaf_df.cov = cov(num_leaf_df)
cat("Covariance Matrix\n\n")
num_leaf_df.cov
num_leaf_df.pca_cor = princomp(num_leaf_df, cor = TRUE)
summary(num_leaf_df.pca_cor, loadings=T)
pcasum = summary(num_leaf_df.pca_cor, loadings=T)
pcasum$sdev
pcasum$center
pcasum$scale
pcasum$n.obs
pcasum$scores
pcasum$call
pcasum$cutoff
pcasum$print.loadings
pcasum
num_leaf_df.pca_cor$loadings
num_leaf_df.pca_cor$loadings[2]
num_leaf_df.pca_cor$loadings[c(3:5)]
num_leaf_df.pca_cor$loadings
cum = c(0.071  0.143  0.214  0.286  0.357  0.429  0.500  0.571  0.643   0.714   0.786   0.857   0.929   1.000)
cum = c(0.071, 0.143, 0.214, 0.286, 0.357, 0.429, 0.500, 0.571, 0.643,  0.714,  0.786,  0.857,  0.929,  1.000)
plot(cum)
scaled(num_leaf_df)
scale(num_leaf_df)
num_leaf_df
scale(num_leaf_df)
num_leaf_df.pca_cor = princomp(scale(num_leaf_df), cor = TRUE)
pcasum = summary(num_leaf_df.pca_cor, loadings=T)
pcasum
num_leaf_df.pca_cor$loadings
pcasum = summary(num_leaf_df.pca_cor, loadings=T)
pcasum
num_leaf_df.pca_cor$loadings
num_leaf_df.pca_cor = princomp(scale(num_leaf_df), cor = TRUE)
pcasum = summary(num_leaf_df.pca_cor, loadings=T)
pcasum
num_leaf_df.pca_cor = princomp(scale(agg), cor = TRUE)
agg
num_leaf_df.pca_cor = princomp(scale(num_agg), cor = TRUE)
pcasum = summary(num_leaf_df.pca_cor, loadings=T)
pcasum
num_leaf_df
num_leaf_df
num_leaf_df.pca_cor = princomp(scale(num_leaf_df), cor = TRUE)
pcasum = summary(num_leaf_df.pca_cor, loadings=T)
pcasum
pcasum = summary(num_leaf_df.pca_cor, loadings=T, cutoff=0.5)
pcasum
pcasum = summary(num_leaf_df.pca_cor, loadings=T, cutoff=0.3)
pcasum
aggr = princomp(scale(num_leaf_df), cor = TRUE)
pcasum = summary(aggr, loadings=T, cutoff=0.3)
pcasum
num_leaf_df.pca_cor = princomp(scale(num_leaf_df), cor = TRUE)
pcasum = summary(num_leaf_df.pca_cor, loadings=T, cutoff=0.3)
pcasum
aggr = princomp(scale(num_leaf_df), cor = TRUE)
aggpca = summary(aggr, loadings=T, cutoff=0.3)
aggpca
aggr = princomp(scale(num_leaf_df), cor = TRUE)
aggpca = summary(aggr, loadings=T, cutoff=0.3)
aggpca
cum = c(0.4060298, 0.7055398, 0.8557138, 0.90826871, 0.93953122, 0.96733781, 0.97955083, 0.987623892, 0.992861029, 0.996111212, 0.997869154, 0.999118308, 0.9999826454, 1.000000e+00)
cum = c(0.4060298, 0.7055398, 0.8557138, 0.90826871, 0.93953122, 0.96733781, 0.97955083, 0.987623892, 0.992861029, 0.996111212, 0.997869154, 0.999118308, 0.9999826454, 1.000000)
hist(cum)
box(cum)
boxplot(cum)
barplot(cum)
cum = c(0.4060298, 0.7055398, 0.8557138, 0.90826871, 0.93953122, 0.96733781, 0.97955083, 0.987623892, 0.992861029)
barplot(cum)
barplot(cum)
barplot(cum, width = 0.5)
barplot(cum, width = 0.5, space = 0)
barplot(cum, width = 0.5, space = 0.2)
barplot(cum, width = 0.5, space = 0.1)
barplot(cum, width = 0.5, space = 0.1, main="Variability Explained")
barplot(cum, width = 0.5, space = 0.1, main="Variability Explained", xlab=T)
barplot(cum, width = 0.5, space = 0.1, main="Variability Explained", axes = T)
barplot(cum)
axis(2, at=x,labels=x, col.axis="red", las=2)
barplot(cum, width = 0.5, space = 0.1, main="Variability Explained", axes = T)
axis(2, at=x,labels=x, col.axis="red", las=2)
library(ggfortify)
autoplot(pca_res)
# install.packages('comprehenr')
install.packages('ggfortify')
autoplot(num_leaf_df.pca_cor)
library(ggfortify)
autoplot(num_leaf_df.pca_cor)
autoplot(num_leaf_df.pca_cor, data = num_leaf_df, color="Class")
num_leaf_df
autoplot(num_leaf_df.pca_cor, data = leaf_df, color="Species")
autoplot(num_leaf_df.pca_cor, data = leaf_df, color="Class")
leaf_df
autoplot(num_leaf_df.pca_cor, data = leaf_df, color=Class)
autoplot(num_leaf_df.pca_cor, data = leaf_df, color=leaf_df$Class)
autoplot(num_leaf_df.pca_cor, color=leaf_df$Class)
aggr = princomp(scale(num_leaf_df), cor = TRUE)
aggr = princomp(scale(num_agg), cor = TRUE)
aggpca = summary(aggr, loadings=T, cutoff=0.3)
autoplot(num_leaf_df.pca_cor, color=leaf_df$Class)
aggpca
autoplot(aggr, color=leaf_df$Class)
autoplot(aggr, data=agg, color=leaf_df$Class)
autoplot(aggr, data=agg, color="Class")
aggpca
pca_res <- prcomp(agg, scale. = TRUE)
pca_res <- prcomp(num_agg, scale. = TRUE)
pca_res <- prcomp(df, scale. = TRUE)
autoplot(pca_res, data = iris, colour = 'Species')
autoplot(pca_res, data = agg, colour = 'Species')
autoplot(pca_res, data = agg)
autoplot(pca_res)
num_agg
pca_res
autoplot(pca_res, data = agg, cutoff=0.5)
pca_res <- prcomp(num_agg, scale. = TRUE, cutoff=0.5)
pca_res <- prcomp(num_agg, scale. = TRUE, cutoff=0.5)
pca_res <- prcomp(num_agg, scale. = TRUE)
autoplot(pca_res, data = agg)
autoplot(pca_res, data = agg)
autoplot(pca_res, data = agg, color="Class")
autoplot(pca_res, data = agg, color="Class")
autoplot(pca_res, data = agg$Class, color="Class")
agg$Class
autoplot(pca_res, data = agg, color= agg$Class)
library(devtools)
install_github("ggbiplot", "vqv")
library(ggbiplot)
library(devtools)
library("devtools")
install.packages(devtools)
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
knitr::opts_chunk$set(echo = TRUE)
install.packages("devtools")
install.packages("devtools")
